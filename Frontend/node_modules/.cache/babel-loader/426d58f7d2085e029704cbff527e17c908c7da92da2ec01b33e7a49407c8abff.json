{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const userSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    token: '',\n    user: null,\n    userLoading: false\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes.\n      // Also, no return statement is required from these functions.\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","token","user","userLoading","reducers","increment","state","value","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["C:/Users/User/Desktop/OC IntÃ©grateur Web/Projet 10/argentbank/Frontend/src/redux/reducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    token:'',\r\n    user: null,\r\n    userLoading: false,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes.\r\n      // Also, no return statement is required from these functions.\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = userSlice.actions\r\n\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAC,EAAE;IACRC,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpB;MACA;MACA;MACA;MACA;MACAA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB,CAAC;IACDC,SAAS,EAAGF,KAAK,IAAK;MACpBA,KAAK,CAACC,KAAK,IAAI,CAAC;IAClB,CAAC;IACDE,iBAAiB,EAAEA,CAACH,KAAK,EAAEI,MAAM,KAAK;MACpCJ,KAAK,CAACC,KAAK,IAAIG,MAAM,CAACC,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEN,SAAS;EAAEG,SAAS;EAAEC;AAAkB,CAAC,GAAGX,SAAS,CAACc,OAAO;AAE5E,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}