{"ast":null,"code":"import axios from \"axios\";\nimport { loginUserFailed, loginUserRequest, loginUserSuccess, logOut, updateUsernameFailed, updateUsernameRequest, updateUsernameSuccess } from \"./reducer\";\nexport const loginUser = (body, dispatch) => {\n  dispatch(loginUserRequest());\n  return axios.post(\"http://localhost:3001/api/v1/user/login\", body).then(res => {\n    if (body.rememberMe) {\n      localStorage.setItem(\"token\", res.data.body.token);\n    }\n    getUser(res.data.body.token, dispatch);\n  }).catch(error => {\n    console.error(\"Erreur lors de la connexion : \", error);\n    alert(\"Un problème a été rencontré lors de la connexion.\");\n    dispatch(loginUserFailed(error.message));\n  });\n};\nexport const registerUser = (body, goToSignIn, clearLoading) => {\n  return axios.post(\"http://localhost:3001/api/v1/user/signup\", body).then(() => {\n    goToSignIn();\n    clearLoading();\n    alert('Utilisateur ajouté');\n  }).catch(() => {\n    clearLoading();\n    alert(\"Un problème a été rencontré\");\n  });\n};\nexport const getUser = (token, dispatch) => {\n  dispatch(loginUserRequest());\n  return axios.post(\"http://localhost:3001/api/v1/user/profile\", null, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(res => {\n    const payload = {\n      user: res.data.body,\n      token\n    };\n    dispatch(loginUserSuccess(payload));\n    return res.data.body;\n  }).catch(error => {\n    console.error(\"Erreur lors de la connexion : \", error);\n    alert(\"Un problème a été rencontré lors de la connexion.\");\n    dispatch(loginUserFailed(error.message));\n  });\n};\nexport const logOutUser = dispatch => {\n  localStorage.removeItem('token');\n  dispatch(logOut());\n};\nexport const updateUsername = (newUsername, token) => dispatch => {\n  dispatch(updateUsernameRequest());\n  return axios.put(\"http://localhost:3001/api/v1/user/profile\", {\n    userName: newUsername\n  }, {\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }).then(response => {\n    dispatch(updateUsernameSuccess({\n      userName: newUsername\n    }));\n  }).catch(error => {\n    console.error(\"Erreur lors de la mise à jour du nom d'utilisateur : \", error);\n    dispatch(updateUsernameFailed(error.message));\n    alert(\"Un problème à été rencontré lors de la mise à jour du nom d'utilisateur.\");\n  });\n};","map":{"version":3,"names":["axios","loginUserFailed","loginUserRequest","loginUserSuccess","logOut","updateUsernameFailed","updateUsernameRequest","updateUsernameSuccess","loginUser","body","dispatch","post","then","res","rememberMe","localStorage","setItem","data","token","getUser","catch","error","console","alert","message","registerUser","goToSignIn","clearLoading","headers","Authorization","payload","user","logOutUser","removeItem","updateUsername","newUsername","put","userName","response"],"sources":["C:/Users/User/Desktop/OC Intégrateur Web/Projet 10/argentbank/Frontend/src/redux/action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { loginUserFailed, loginUserRequest, loginUserSuccess, logOut, updateUsernameFailed, updateUsernameRequest, updateUsernameSuccess } from \"./reducer\";\r\n\r\nexport const loginUser = (body, dispatch) => {\r\n  dispatch(loginUserRequest());\r\n  return axios.post(\"http://localhost:3001/api/v1/user/login\", body)\r\n    .then((res) => {\r\n      if (body.rememberMe) {\r\n        localStorage.setItem(\"token\", res.data.body.token);\r\n      }\r\n      getUser(res.data.body.token, dispatch);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Erreur lors de la connexion : \", error);\r\n      alert(\"Un problème a été rencontré lors de la connexion.\");\r\n      dispatch(loginUserFailed(error.message));\r\n    });\r\n};\r\n\r\nexport const registerUser = (body, goToSignIn, clearLoading) => {\r\n  return axios.post(\"http://localhost:3001/api/v1/user/signup\", body)\r\n    .then(() => {\r\n        goToSignIn();\r\n        clearLoading();\r\n        alert('Utilisateur ajouté');\r\n    })\r\n    .catch(() => {\r\n        clearLoading();\r\n      alert(\"Un problème a été rencontré\");\r\n    });\r\n};\r\n\r\nexport const getUser = (token, dispatch) => {\r\n  dispatch(loginUserRequest());\r\n  return axios.post(\"http://localhost:3001/api/v1/user/profile\", null, {\r\n      headers: { Authorization: \"Bearer \" + token },\r\n    })\r\n    .then((res) => {\r\n      const payload = { user: res.data.body, token };\r\n      dispatch(loginUserSuccess(payload));\r\n      return res.data.body;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Erreur lors de la connexion : \", error);\r\n      alert(\"Un problème a été rencontré lors de la connexion.\");\r\n      dispatch(loginUserFailed(error.message));\r\n    });\r\n};\r\n\r\nexport const logOutUser = (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch(logOut());\r\n}\r\n\r\nexport const updateUsername = (newUsername, token) => (dispatch) => {\r\n  dispatch(updateUsernameRequest());\r\n\r\n  return axios.put(\r\n    \"http://localhost:3001/api/v1/user/profile\", \r\n    { userName: newUsername }, \r\n    { headers: { Authorization: \"Bearer \" + token } }\r\n  )\r\n  .then((response) =>{\r\n    dispatch(updateUsernameSuccess({ userName: newUsername }));\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Erreur lors de la mise à jour du nom d'utilisateur : \", error);\r\n    dispatch(updateUsernameFailed(error.message));\r\n    alert(\"Un problème à été rencontré lors de la mise à jour du nom d'utilisateur.\");\r\n  });  \r\n}\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,oBAAoB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,WAAW;AAE3J,OAAO,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC3CA,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;EAC5B,OAAOF,KAAK,CAACW,IAAI,CAAC,yCAAyC,EAAEF,IAAI,CAAC,CAC/DG,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIJ,IAAI,CAACK,UAAU,EAAE;MACnBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC;IACpD;IACAC,OAAO,CAACN,GAAG,CAACI,IAAI,CAACR,IAAI,CAACS,KAAK,EAAER,QAAQ,CAAC;EACxC,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtDE,KAAK,CAAC,mDAAmD,CAAC;IAC1Db,QAAQ,CAACT,eAAe,CAACoB,KAAK,CAACG,OAAO,CAAC,CAAC;EAC1C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAChB,IAAI,EAAEiB,UAAU,EAAEC,YAAY,KAAK;EAC9D,OAAO3B,KAAK,CAACW,IAAI,CAAC,0CAA0C,EAAEF,IAAI,CAAC,CAChEG,IAAI,CAAC,MAAM;IACRc,UAAU,CAAC,CAAC;IACZC,YAAY,CAAC,CAAC;IACdJ,KAAK,CAAC,oBAAoB,CAAC;EAC/B,CAAC,CAAC,CACDH,KAAK,CAAC,MAAM;IACTO,YAAY,CAAC,CAAC;IAChBJ,KAAK,CAAC,6BAA6B,CAAC;EACtC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMJ,OAAO,GAAGA,CAACD,KAAK,EAAER,QAAQ,KAAK;EAC1CA,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;EAC5B,OAAOF,KAAK,CAACW,IAAI,CAAC,2CAA2C,EAAE,IAAI,EAAE;IACjEiB,OAAO,EAAE;MAAEC,aAAa,EAAE,SAAS,GAAGX;IAAM;EAC9C,CAAC,CAAC,CACDN,IAAI,CAAEC,GAAG,IAAK;IACb,MAAMiB,OAAO,GAAG;MAAEC,IAAI,EAAElB,GAAG,CAACI,IAAI,CAACR,IAAI;MAAES;IAAM,CAAC;IAC9CR,QAAQ,CAACP,gBAAgB,CAAC2B,OAAO,CAAC,CAAC;IACnC,OAAOjB,GAAG,CAACI,IAAI,CAACR,IAAI;EACtB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtDE,KAAK,CAAC,mDAAmD,CAAC;IAC1Db,QAAQ,CAACT,eAAe,CAACoB,KAAK,CAACG,OAAO,CAAC,CAAC;EAC1C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAItB,QAAQ,IAAK;EACpCK,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;EAChCvB,QAAQ,CAACN,MAAM,CAAC,CAAC,CAAC;AACtB,CAAC;AAED,OAAO,MAAM8B,cAAc,GAAGA,CAACC,WAAW,EAAEjB,KAAK,KAAMR,QAAQ,IAAK;EAClEA,QAAQ,CAACJ,qBAAqB,CAAC,CAAC,CAAC;EAEjC,OAAON,KAAK,CAACoC,GAAG,CACd,2CAA2C,EAC3C;IAAEC,QAAQ,EAAEF;EAAY,CAAC,EACzB;IAAEP,OAAO,EAAE;MAAEC,aAAa,EAAE,SAAS,GAAGX;IAAM;EAAE,CAClD,CAAC,CACAN,IAAI,CAAE0B,QAAQ,IAAI;IACjB5B,QAAQ,CAACH,qBAAqB,CAAC;MAAE8B,QAAQ,EAAEF;IAAY,CAAC,CAAC,CAAC;EAC5D,CAAC,CAAC,CACDf,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;IAC7EX,QAAQ,CAACL,oBAAoB,CAACgB,KAAK,CAACG,OAAO,CAAC,CAAC;IAC7CD,KAAK,CAAC,0EAA0E,CAAC;EACnF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}